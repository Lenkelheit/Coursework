<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Galagram</name>
    </assembly>
    <members>
        <member name="T:Galagram.Window.Dialogs.Interfaces.IMessageBox">
            <summary>
            Provides basic interaction for Message Boxes.
            </summary>
        </member>
        <member name="P:Galagram.Window.Dialogs.Interfaces.IMessageBox.Header">
            <summary>
            Gets or sets the header of MessageBox.
            </summary>
        </member>
        <member name="P:Galagram.Window.Dialogs.Interfaces.IMessageBox.Text">
            <summary>
            Gets or sets the text message of MessageBox.
            </summary>
        </member>
        <member name="T:Galagram.Window.Dialogs.MessageBoxButton">
            <summary>
            Specifies the buttons that are displayed on a message box. 
            <para/> 
            Used as an argument <see cref="M:Galagram.Window.Dialogs.MessageBox.ShowDialog(Galagram.Window.Dialogs.MessageBoxButton)"/> method.
            </summary>
        </member>
        <member name="F:Galagram.Window.Dialogs.MessageBoxButton.Ok">
            <summary>
            The message box displays an OK button
            </summary>
        </member>
        <member name="F:Galagram.Window.Dialogs.MessageBoxButton.YesNo">
            <summary>
            The message box displays YES and NO buttons.
            </summary>
        </member>
        <member name="T:Galagram.Window.Dialogs.MessageBox">
            <summary>
            Interaction logic for MessageBoxOk.xaml
            </summary>
            <summary>
            MessageBox
            </summary>
        </member>
        <member name="M:Galagram.Window.Dialogs.MessageBox.#ctor">
            <summary>
            Initialize a new instance of <see cref="T:Galagram.Window.Dialogs.MessageBox"/>
            </summary>
        </member>
        <member name="P:Galagram.Window.Dialogs.MessageBox.Header">
            <summary>
            Set up title for <see cref="T:Galagram.Window.Dialogs.MessageBox"/>
            </summary>
        </member>
        <member name="P:Galagram.Window.Dialogs.MessageBox.Text">
            <summary>
            Set up message text for <see cref="T:Galagram.Window.Dialogs.MessageBox"/>
            </summary>
        </member>
        <member name="M:Galagram.Window.Dialogs.MessageBox.ShowDialog(Galagram.Window.Dialogs.MessageBoxButton)">
            <summary>
            Open a window and returns only when the newly opened window is closed
            </summary>
            <param name="messageBoxButton">
             Specifies the buttons that are displayed on a message box. 
            </param>
            <returns>
            An ShodDialog result
            </returns>
        </member>
        <member name="M:Galagram.Window.Dialogs.MessageBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Galagram.Window.Admin.UserControls.DeleteItem">
            <summary>
            Interaction logic for DeleteItem.xaml
            </summary>
            <summary>
            DeleteItem
            </summary>
        </member>
        <member name="M:Galagram.Window.Admin.UserControls.DeleteItem.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Galagram.Window.Admin.UserControls.Messages.MessageInside">
            <summary>
            Interaction logic for MessageInside.xaml
            </summary>
            <summary>
            MessageInside
            </summary>
        </member>
        <member name="M:Galagram.Window.Admin.UserControls.Messages.MessageInside.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Galagram.Window.Admin.AdminWindow">
            <summary>
            Interaction logic for AdminWindow.xaml
            </summary>
            <summary>
            AdminWindow
            </summary>
        </member>
        <member name="M:Galagram.Window.Admin.AdminWindow.#ctor">
            <summary>
            Initialize a new instance of <see cref="T:Galagram.Window.Admin.AdminWindow"/>
            </summary>
        </member>
        <member name="M:Galagram.Window.Admin.AdminWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Galagram.Window.User.AskQuestion">
            <summary>
            Interaction logic for AskQuestion.xaml
            </summary>
            <summary>
            AskQuestion
            </summary>
        </member>
        <member name="M:Galagram.Window.User.AskQuestion.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Galagram.Window.User.Follow">
            <summary>
            Interaction logic for Follow.xaml
            </summary>
            <summary>
            Follow
            </summary>
        </member>
        <member name="P:Galagram.Window.User.Follow.Header">
            <summary>
            Set up title for <see cref="T:Galagram.Window.User.Follow"/>
            </summary>
        </member>
        <member name="M:Galagram.Window.User.Follow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Galagram.Window.User.MainWindow">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:Galagram.Window.User.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Galagram.Window.User.PhotoInside">
            <summary>
            Interaction logic for PhotoInside.xaml
            </summary>
            <summary>
            PhotoInside
            </summary>
        </member>
        <member name="M:Galagram.Window.User.PhotoInside.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Galagram.Window.User.Search">
            <summary>
            Interaction logic for Search.xaml
            </summary>
            <summary>
            Search
            </summary>
        </member>
        <member name="M:Galagram.Window.User.Search.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Galagram.Window.User.Setting">
            <summary>
            Interaction logic for Setting.xaml
            </summary>
            <summary>
            Setting
            </summary>
        </member>
        <member name="M:Galagram.Window.User.Setting.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Galagram.Window.Registration">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
            <summary>
            Registration
            </summary>
        </member>
        <member name="M:Galagram.Window.Registration.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Galagram.Services.WindowManager">
            <summary>
            Provides algorithms with window.
            <para />
            Implements a Factory pattern.
            <para />
            Implements a Singleton pattern
            </summary>
        </member>
        <member name="P:Galagram.Services.WindowManager.Instance">
            <summary>
            Gets an instance of <see cref="T:Galagram.Services.WindowManager"/>.
            </summary>
        </member>
        <member name="M:Galagram.Services.WindowManager.MakeInstance(System.String)">
            <summary>
            Returns a new instance of a window.
            </summary>
            <param name="key">
            A key by which window was registered.
            </param>
            <returns>
            An instance of <see cref="T:System.Windows.Window"/>
            </returns>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="key"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Throws when key was not registered before.
            </exception>
        </member>
        <member name="M:Galagram.Services.WindowManager.Registrate(System.String,System.Type)">
            <summary>
            Registrates a type of the window by current key.
            </summary>
            <param name="key">
            A key by which type is registered.
            </param>
            <param name="value">
            A type of the window
            </param>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="key"/> or <paramref name="value"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Throws when the key already has been registered
            </exception>
            <exception cref="T:System.ArithmeticException">
            Throws when <paramref name="value"/> can not be registered.
            </exception>
        </member>
        <member name="M:Galagram.Services.WindowManager.UnRegistrate(System.String)">
            <summary>
            Unregistrates type by current key
            </summary>
            <param name="key">
            A key by which Type was registered
            </param>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="key"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Throws when factory does not contain current key
            </exception>
        </member>
        <member name="M:Galagram.Services.WindowManager.ShowWindowDialog(System.String)">
            <summary>
            Opens a window and returns only when a newly opened window is closed.
            </summary>
            <param name="key">
            A key by which window was registered.
            </param>
            <returns>
            A <see cref="T:System.Nullable"/> value of type <see cref="T:System.Boolean"/> that specifies whether the activity was accepted (true) or canceled (false).
            <para/>
            The return value is the value of the <see cref="P:System.Windows.Window.DialogResult"/> property before a window closes.
            </returns>    
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="key"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Throws when key was not registered before.
            </exception>
        </member>
        <member name="M:Galagram.Services.WindowManager.ShowWindowDialog(System.String,System.Object)">
            <summary>
            Opens a window and returns only when a newly opened window is closed.
            </summary>
            <param name="key">
            A key by which window was registered.
            </param>
            <param name="viewModel">
            A DataContext for window.
            </param>
            <returns>
            A <see cref="T:System.Nullable"/> value of type <see cref="T:System.Boolean"/> that specifies whether the activity was accepted (true) or canceled (false).
            <para/>
            The return value is the value of the <see cref="P:System.Windows.Window.DialogResult"/> property before a window closes.
            </returns>    
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="key"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Throws when key was not registered before.
            </exception>
        </member>
        <member name="M:Galagram.Services.WindowManager.ShowMessageWindow(System.String)">
            <summary>
            Open a message box window and returns only when a newly opened window is closed.
            </summary>
            <param name="text">
            Specify the text of the window.
            </param>
            <returns>
            A <see cref="T:System.Nullable"/> value of type <see cref="T:System.Boolean"/> that specifies whether the activity was accepted (true) or canceled (false).
            <para/>
            The return value is the value of the <see cref="P:System.Windows.Window.DialogResult"/> property before a window closes.
            </returns>    
            <exception cref="T:System.InvalidOperationException">
            Throws when message box is not registered.
            </exception>
        </member>
        <member name="M:Galagram.Services.WindowManager.ShowMessageWindow(System.String,System.String)">
            <summary>
            Open a message box window and returns only when a newly opened window is closed.
            </summary>
            <param name="text">
            Specify the text of the window.
            </param>
            <param name="header">
            Specify the header text of the window.
            </param>
            <returns>
            A <see cref="T:System.Nullable"/> value of type <see cref="T:System.Boolean"/> that specifies whether the activity was accepted (true) or canceled (false).
            <para/>
            The return value is the value of the <see cref="P:System.Windows.Window.DialogResult"/> property before a window closes.
            </returns>    
            <exception cref="T:System.InvalidOperationException">
            Throws when message box is not registered.
            </exception>
        </member>
        <member name="M:Galagram.Services.WindowManager.ShowMessageWindow(System.String,System.String,Galagram.Window.Dialogs.MessageBoxButton)">
            <summary>
            Open a message box window and returns only when a newly opened window is closed.
            </summary>
            <param name="text">
            Specify the text of the window.
            </param>
            <param name="header">
            Specify the header text of the window.
            </param>
            <param name="buttonType">
            Specify what buttons will be on the window.
            </param>
            <returns>
            A <see cref="T:System.Nullable"/> value of type <see cref="T:System.Boolean"/> that specifies whether the activity was accepted (true) or canceled (false).
            <para/>
            The return value is the value of the <see cref="P:System.Windows.Window.DialogResult"/> property before a window closes.
            </returns>    
            <exception cref="T:System.InvalidOperationException">
            Throws when message box is not registered.
            </exception>
        </member>
        <member name="M:Galagram.Services.WindowManager.SwitchMainWindow(System.String)">
            <summary>
            Switch current main window to passed one.
            </summary>
            <param name="key">
            A key by which window was registered.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="key"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Throws when key was not registered before.
            </exception>
        </member>
        <member name="M:Galagram.Services.WindowManager.SwitchMainWindow(System.String,System.Object)">
            <summary>
            Switch current main window to passed one.
            </summary>
            <param name="key">
            A key by which window was registered.
            </param>
            <param name="viewModel">
            A DataContext for window.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="key"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Throws when key was not registered before.
            </exception>
        </member>
        <member name="T:Galagram.App">
            <summary>
            Interaction logic for App.xaml
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:Galagram.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Galagram.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:Galagram.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Galagram.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Galagram.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
