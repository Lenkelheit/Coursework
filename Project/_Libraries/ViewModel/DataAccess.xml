<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DataAccess</name>
    </assembly>
    <members>
        <member name="T:DataAccess.Interfaces.IGenericRepository`1">
            <summary>
            Reprents interface for classes which will proxy behind data acsess and buisness logic
            </summary>
            <typeparam name="TEntity">Data class work with</typeparam>
        </member>
        <member name="P:DataAccess.Interfaces.IGenericRepository`1.Count">
            <summary>
            Property that enale to interact with count of entities in data base
            </summary>
            <returns>Count of entities</returns>
        </member>
        <member name="M:DataAccess.Interfaces.IGenericRepository`1.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String)">
            <summary>
            Method that get data from data base
            </summary>
            <param name="filter">Filter for data</param>
            <param name="orderBy">The order of the received items</param>
            <param name="includeProperties">Included properties</param>
            <returns>Queried entities collection</returns>
        </member>
        <member name="M:DataAccess.Interfaces.IGenericRepository`1.GetByID(System.Object)">
            <summary>
            Method that enable to get entity by id
            </summary>
            <param name="id">Entities id</param>
            <returns>Finded entity</returns>
        </member>
        <member name="M:DataAccess.Interfaces.IGenericRepository`1.Insert(`0)">
            <summary>
            Inserts data in data base
            </summary>
            <param name="entity">Inserted entity</param>
        </member>
        <member name="M:DataAccess.Interfaces.IGenericRepository`1.Delete(System.Object)">
            <summary>
            Deletes object by id
            </summary>
            <param name="id">Objects id</param>
        </member>
        <member name="M:DataAccess.Interfaces.IGenericRepository`1.Delete(`0)">
            <summary>
            Deletes preset entity
            </summary>
            <param name="entityToDelete">Entity to delete</param>
        </member>
        <member name="M:DataAccess.Interfaces.IGenericRepository`1.Update(`0)">
            <summary>
            Updates data base
            </summary>
            <param name="entityToUpdate">Entity to update</param>
        </member>
        <member name="T:DataAccess.Repositories.GenericRepository`1">
            <summary>
            Proxy data acsess and view model
            </summary>
            <typeparam name="TEntity">
            Data class work with
            </typeparam>
        </member>
        <member name="M:DataAccess.Repositories.GenericRepository`1.#ctor(DataAccess.Context.AppContext)">
            <summary>
            Initialize a new instance of <see cref="T:DataAccess.Repositories.GenericRepository`1"/>
            </summary>
            <param name="context">Data context</param>
        </member>
        <member name="P:DataAccess.Repositories.GenericRepository`1.Count">
            <summary>
            Counts entities in data set
            </summary>
            <returns>
            Amount of entities
            </returns>
        </member>
        <member name="M:DataAccess.Repositories.GenericRepository`1.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String)">
            <summary>
            Gets data from data base
            </summary>
            <param name="filter">Filter for data</param>
            <param name="orderBy">The order of the received items</param>
            <param name="includeProperties">Included properties</param>
            <returns>Queried entities collection</returns>
        </member>
        <member name="M:DataAccess.Repositories.GenericRepository`1.GetByID(System.Object)">
            <summary>
            Gets entity by id
            </summary>
            <param name="id">Entities id</param>
            <returns>Finded entity</returns>
        </member>
        <member name="M:DataAccess.Repositories.GenericRepository`1.Insert(`0)">
            <summary>
            Inserts data in data base
            </summary>
            <param name="entity">Inserted entity</param>
        </member>
        <member name="M:DataAccess.Repositories.GenericRepository`1.Delete(System.Object)">
            <summary>
            Deletes object by id
            </summary>
            <param name="id">Objects id</param>
        </member>
        <member name="M:DataAccess.Repositories.GenericRepository`1.Delete(`0)">
            <summary>
            Deletes preset entity
            </summary>
            <param name="entityToDelete">Entity to delete</param>
        </member>
        <member name="M:DataAccess.Repositories.GenericRepository`1.Update(`0)">
            <summary>
            Updates data base
            </summary>
            <param name="entityToUpdate">Entity to update</param>
        </member>
    </members>
</doc>
