<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:Galagram.Converters">
    

        <!--BUTTON-->
    <Style TargetType="Button" x:Key="ButtonBase">
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <!--BUTTON FOR FOLLOW DELETE-->
    <Style BasedOn="{StaticResource ButtonBase}" TargetType="{x:Type Button}" x:Key="DeleteCrossButton">
        <Style.Resources>
            <c:TwoUserCompareConverter x:Key="TwoUserConverter"/>
        </Style.Resources>
        <Style.Triggers>
            <!--SHOW ON LOGGED USER PAGE-->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                           AncestorType={x:Type Window}},
                                           Path=DataContext.DataStorage.IsCurrentUserShown, 
                                           Mode=OneWay}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <!--DO NOT SHOW ON OTHER USER PAGE-->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                           AncestorType={x:Type Window}},
                                           Path=DataContext.DataStorage.IsCurrentUserShown, 
                                           Mode=OneWay}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <!--SHOW DELETE YOURSELF ON OTHER USR PAGES-->
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <!--compare user in list and logged user-->
                    <MultiBinding Converter="{StaticResource TwoUserConverter}">
                        <!--USER IN LIST-->
                        <Binding RelativeSource="{RelativeSource Self}" Path="DataContext" Mode="OneWay" />
                        <!--LOGGED USER-->
                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" Path="DataContext.DataStorage.LoggedUser" Mode="OneWay"/>
                    </MultiBinding>
                </DataTrigger.Binding>

                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>

        </Style.Triggers>
    </Style>
    <!--CLICK BUTTON-->
    <Style TargetType="Button" x:Key="ClickButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Foreground" Value="{StaticResource LightBlueBrush}"/>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="FontSize" Value="25"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PinkBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DarkSilverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--CLICK BUTTON FOLLOW-->
    <Style TargetType="Button" x:Key="FollowButton" BasedOn="{StaticResource ClickButton}">
        <Style.Triggers>
            <!--VISIBILITY-->
            <DataTrigger Binding="{Binding IsCurrentUserShown}" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsCurrentUserShown}" Value="False">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <!--TEXT-->
            <DataTrigger Binding="{Binding IsFollowing}" Value="True">
                <Setter Property="Content" Value="Un Follow"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsFollowing}" Value="False">
                <Setter Property="Content" Value="Follow"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--LIKE PHOTO BUTTON-->
    <Style TargetType="Button" x:Key="LikePhotoButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PinkBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkRedBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--DISLIKE PHOTO BUTTON-->
    <Style TargetType="Button" x:Key="DisLikePhotoButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkSilverBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--LIKE COMMENT BUTTON-->
    <Style TargetType="Button" x:Key="LikeCommentButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PinkBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkRedBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--DISLIKE COMMENT BUTTON-->
    <Style TargetType="Button" x:Key="DisLikeCommentButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkSilverBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--HEADER BUTTON-->
    <Style TargetType="Button" x:Key="HeaderButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource BlueBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BlueHoverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PinkBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--TOP BUTTON-->
    <Style TargetType="Button" x:Key="TopButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource DarkGridBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource LightGridBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--TOP EXIT BUTTON-->
    <Style TargetType="Button" x:Key="TopExitButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource DarkGridBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkRedBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--IMG BUTTON-->
    <Style TargetType="Button" x:Key="ImgButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="Margin" Value="5"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource WhiteSmokeBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>